name: Smoke Tests CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read

jobs:
  smoke-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Playwright dependencies
      run: |
        mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps" || true
        echo "Playwright installation completed (or skipped if failed)"
        
    - name: Run smoke tests
      run: |
        mvn test -Dtest="HealthCheckTest,SwaggerUiSmokeTest" \
          -Dmaven.test.failure.ignore=true \
          -Dallure.results.directory=target/allure-results \
          -DfailIfNoTests=false
          
    - name: Generate Surefire HTML report
      if: always()
      run: mvn surefire-report:report-only site -DgenerateReports=false
      
    - name: Generate Allure Report
      if: always()
      run: mvn allure:report
      
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: smoke-test-results
        path: |
          target/surefire-reports/
          target/site/
          target/allure-report/
        retention-days: 30
        
    - name: Upload Allure Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results-smoke
        path: target/allure-results/
        retention-days: 30
        
    - name: Parse Test Results
      if: always()
      run: |
        echo "## 📊 Smoke Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "target/surefire-reports" ]; then
          TOTAL_TESTS=0
          TOTAL_FAILURES=0
          TOTAL_ERRORS=0
          TOTAL_SKIPPED=0
          
          for file in target/surefire-reports/TEST-*.xml; do
            if [ -f "$file" ]; then
              TESTS=$(grep -o 'tests="[0-9]*"' "$file" | cut -d'"' -f2)
              FAILURES=$(grep -o 'failures="[0-9]*"' "$file" | cut -d'"' -f2)
              ERRORS=$(grep -o 'errors="[0-9]*"' "$file" | cut -d'"' -f2)
              SKIPPED=$(grep -o 'skipped="[0-9]*"' "$file" | cut -d'"' -f2)
              
              TOTAL_TESTS=$((TOTAL_TESTS + ${TESTS:-0}))
              TOTAL_FAILURES=$((TOTAL_FAILURES + ${FAILURES:-0}))
              TOTAL_ERRORS=$((TOTAL_ERRORS + ${ERRORS:-0}))
              TOTAL_SKIPPED=$((TOTAL_SKIPPED + ${SKIPPED:-0}))
              
              CLASSNAME=$(basename "$file" .xml | sed 's/TEST-//')
              echo "- **$CLASSNAME**: $TESTS tests, $FAILURES failures, $ERRORS errors, $SKIPPED skipped" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 **Overall Results**" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Tests**: $TOTAL_TESTS" >> $GITHUB_STEP_SUMMARY
          echo "- **✅ Passed**: $((TOTAL_TESTS - TOTAL_FAILURES - TOTAL_ERRORS - TOTAL_SKIPPED))" >> $GITHUB_STEP_SUMMARY
          echo "- **❌ Failed**: $TOTAL_FAILURES" >> $GITHUB_STEP_SUMMARY
          echo "- **🚨 Errors**: $TOTAL_ERRORS" >> $GITHUB_STEP_SUMMARY
          echo "- **⏭️ Skipped**: $TOTAL_SKIPPED" >> $GITHUB_STEP_SUMMARY
          
          if [ $TOTAL_FAILURES -gt 0 ] || [ $TOTAL_ERRORS -gt 0 ]; then
            echo "- **Status**: ❌ **FAILED**" >> $GITHUB_STEP_SUMMARY
            echo "::error::Tests failed with $TOTAL_FAILURES failures and $TOTAL_ERRORS errors"
          else
            echo "- **Status**: ✅ **PASSED**" >> $GITHUB_STEP_SUMMARY
            echo "::notice::All tests passed successfully!"
          fi
        else
          echo "❌ **No test results found**" >> $GITHUB_STEP_SUMMARY
          echo "::warning::No surefire reports directory found"
        fi
        
    - name: Comment PR with Test Results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'target/surefire-reports';
          if (fs.existsSync(path)) {
            const files = fs.readdirSync(path).filter(f => f.endsWith('.xml'));
            let comment = '## 🧪 Smoke Tests Results\n\n';
            comment += `- **Tests Run**: ${files.length} test classes\n`;
            comment += `- **Status**: ${context.payload.workflow_run?.conclusion || 'completed'}\n`;
            comment += `- **Reports**: [View Detailed Reports in Artifacts](${context.payload.repository.html_url}/actions/runs/${context.runId})\n\n`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }