name: Contract Drift Detection

on:
  push:
    branches: [ main ]
    paths:
      - 'src/test/resources/openapi.json'
      - '**/ContractTest.java'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/test/resources/openapi.json'
      - '**/ContractTest.java'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  actions: read
  pull-requests: write

jobs:
  contract-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Checkout previous version for comparison
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.before || 'HEAD~1' }}
        path: ./previous
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install OpenAPI tools
      run: |
        npm install -g @apidevtools/swagger-diff
        
    - name: Compare OpenAPI specifications
      id: compare-specs
      run: |
        CURRENT_SPEC="src/test/resources/openapi.json"
        PREVIOUS_SPEC="./previous/src/test/resources/openapi.json"
        
        if [ -f "$PREVIOUS_SPEC" ] && [ -f "$CURRENT_SPEC" ]; then
          echo "Comparing OpenAPI specifications..."
          
          # Create diff report
          swagger-diff "$PREVIOUS_SPEC" "$CURRENT_SPEC" --format json > openapi-diff.json || true
          swagger-diff "$PREVIOUS_SPEC" "$CURRENT_SPEC" --format markdown > openapi-diff.md || true
          
          # Check for breaking changes
          BREAKING_CHANGES=$(cat openapi-diff.json | jq -r '.breakingDifferences | length' 2>/dev/null || echo "0")
          NON_BREAKING_CHANGES=$(cat openapi-diff.json | jq -r '.nonBreakingDifferences | length' 2>/dev/null || echo "0")
          
          echo "breaking_changes=$BREAKING_CHANGES" >> $GITHUB_OUTPUT
          echo "non_breaking_changes=$NON_BREAKING_CHANGES" >> $GITHUB_OUTPUT
          
          if [ "$BREAKING_CHANGES" -gt "0" ]; then
            echo "::error::Breaking changes detected in OpenAPI specification!"
            echo "::error::Number of breaking changes: $BREAKING_CHANGES"
            cat openapi-diff.md
          elif [ "$NON_BREAKING_CHANGES" -gt "0" ]; then
            echo "::warning::Non-breaking changes detected in OpenAPI specification"
            echo "::warning::Number of changes: $NON_BREAKING_CHANGES"
            cat openapi-diff.md
          else
            echo "::notice::No contract changes detected"
          fi
        else
          echo "::notice::No previous OpenAPI spec found for comparison"
          echo "breaking_changes=0" >> $GITHUB_OUTPUT
          echo "non_breaking_changes=0" >> $GITHUB_OUTPUT
        fi
        
    - name: Install Playwright dependencies
      run: |
        mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"
        
    - name: Run Contract Validation Tests
      run: |
        mvn test -Dtest="ContractTest" \
          -Dmaven.test.failure.ignore=false \
          -Dallure.results.directory=target/allure-results
          
    - name: Validate Contract Test Results
      run: |
        if [ -f target/surefire-reports/TEST-*.xml ]; then
          FAILURES=$(grep -c 'failures="[1-9]' target/surefire-reports/TEST-*.xml || echo "0")
          ERRORS=$(grep -c 'errors="[1-9]' target/surefire-reports/TEST-*.xml || echo "0")
          
          if [ "$FAILURES" -gt "0" ] || [ "$ERRORS" -gt "0" ]; then
            echo "::error::Contract validation tests failed!"
            echo "::error::This indicates API contract violations or breaking changes"
            exit 1
          fi
          
          echo "::notice::All contract validation tests passed"
        fi
        
    - name: Upload Contract Diff Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: contract-diff-report
        path: |
          openapi-diff.json
          openapi-diff.md
          target/surefire-reports/
          target/allure-results/
        retention-days: 30
        
    - name: Comment on PR with Contract Changes
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const breakingChanges = '${{ steps.compare-specs.outputs.breaking_changes }}' || '0';
          const nonBreakingChanges = '${{ steps.compare-specs.outputs.non_breaking_changes }}' || '0';
          
          let comment = '## 📋 API Contract Analysis\n\n';
          
          if (breakingChanges > 0) {
            comment += '### 🚨 Breaking Changes Detected\n';
            comment += `- **Breaking Changes**: ${breakingChanges}\n`;
            comment += '- ⚠️ **Action Required**: These changes may break existing clients\n';
            comment += '- Please review the contract diff report in the workflow artifacts\n\n';
          }
          
          if (nonBreakingChanges > 0) {
            comment += '### ℹ️ Non-Breaking Changes Detected\n';
            comment += `- **Changes**: ${nonBreakingChanges}\n`;
            comment += '- ✅ These changes are backward compatible\n\n';
          }
          
          if (breakingChanges == 0 && nonBreakingChanges == 0) {
            comment += '### ✅ No Contract Changes\n';
            comment += '- No changes detected in the OpenAPI specification\n\n';
          }
          
          comment += '### Contract Validation Status\n';
          comment += '- Contract validation tests: ';
          
          // Check if contract tests passed
          if (fs.existsSync('target/surefire-reports')) {
            comment += '✅ PASSED\n';
          } else {
            comment += '❌ Please check workflow for details\n';
          }
          
          comment += `\n**Detailed Report**: [View Artifacts](${context.payload.repository.html_url}/actions/runs/${context.runId})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Fail on Breaking Changes
      if: steps.compare-specs.outputs.breaking_changes > 0
      run: |
        echo "::error::Breaking changes detected in API contract!"
        echo "::error::Cannot proceed with merge until breaking changes are resolved"
        echo "::error::Please review the contract changes and update accordingly"
        exit 1